{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gateKeeper",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "Order_Number",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ipfsFieldContainerHash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "uiFieldDefinitionsHash",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fromState",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "toState",
          "type": "bytes32"
        }
      ],
      "name": "Transition",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DID",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROLE_ADMIN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROLE_BUYER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROLE_SUPPLIER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROLE_TRANSPORTER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROLE_WAREHOUSE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_DEMAND_GENERATED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_IN_PRODUCTION",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_ORDER_ACCEPTED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_ORDER_DECLINED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_ORDER_ON_HOLD",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_ORDER_PLACED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_OUT_FOR_DELIVERY",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_PRODUCT_DISCARDED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_PRODUCT_SHELVED",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_PRODUCT_SOLD",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_REACHED_TRANSFER_POINT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_READY_FOR_DISPATCH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_RECEIEVED_AT_WAREHOUSE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_RECIEVED_BY_BUYER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STATE_STOCKED_AT_WAREHOUSE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UPDATE_IPFSCONTAINERHASH_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_Order_Number",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_ipfsFieldContainerHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_roles",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_uiFieldDefinitionsHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "Order_Number",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "ipfsFieldContainerHash",
          "type": "string"
        }
      ],
      "name": "edit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gateKeeper",
      "outputs": [
        {
          "internalType": "contract GateKeeper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllStates",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "allStates",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentState",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "state",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getHistory",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "fromState",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "toState",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHistoryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIpfsFieldContainerHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNextStates",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "nextStates",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRoles",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "state",
          "type": "bytes32"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "name",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "nextStates",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "allowedRoles",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "allowedFunctions",
          "type": "bytes4[]"
        },
        {
          "internalType": "bytes4",
          "name": "preFunction",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "history",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "fromState",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "toState",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "actor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "file",
          "type": "string"
        }
      ],
      "name": "setContractFile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "ipfsFieldContainerHash",
          "type": "string"
        }
      ],
      "name": "setIpfsFieldContainerHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "toState",
          "type": "bytes32"
        }
      ],
      "name": "transitionState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "numDeployments": 1,
  "solcInputHash": "c9c99da8d1d067b7af665a0133576b4c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gateKeeper\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"Order_Number\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsFieldContainerHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"uiFieldDefinitionsHash\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"fromState\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"toState\",\"type\":\"bytes32\"}],\"name\":\"Transition\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROLE_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROLE_BUYER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROLE_SUPPLIER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROLE_TRANSPORTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROLE_WAREHOUSE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_DEMAND_GENERATED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_IN_PRODUCTION\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_ORDER_ACCEPTED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_ORDER_DECLINED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_ORDER_ON_HOLD\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_ORDER_PLACED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_OUT_FOR_DELIVERY\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_PRODUCT_DISCARDED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_PRODUCT_SHELVED\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_PRODUCT_SOLD\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_REACHED_TRANSFER_POINT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_READY_FOR_DISPATCH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_RECEIEVED_AT_WAREHOUSE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_RECIEVED_BY_BUYER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STATE_STOCKED_AT_WAREHOUSE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPDATE_IPFSCONTAINERHASH_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_Order_Number\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ipfsFieldContainerHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_roles\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_uiFieldDefinitionsHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"Order_Number\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsFieldContainerHash\",\"type\":\"string\"}],\"name\":\"edit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gateKeeper\",\"outputs\":[{\"internalType\":\"contract GateKeeper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStates\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"allStates\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentState\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"state\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getHistory\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"fromState\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"toState\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIpfsFieldContainerHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextStates\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"nextStates\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoles\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"state\",\"type\":\"bytes32\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"nextStates\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"allowedRoles\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"allowedFunctions\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes4\",\"name\":\"preFunction\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"history\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"fromState\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"toState\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"file\",\"type\":\"string\"}],\"name\":\"setContractFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ipfsFieldContainerHash\",\"type\":\"string\"}],\"name\":\"setIpfsFieldContainerHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"toState\",\"type\":\"bytes32\"}],\"name\":\"transitionState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DID()\":{\"details\":\"Returns a unique DID (Decentralized Identifier) for the supplychainfinance.\",\"returns\":{\"_0\":\"string representing the DID of the supplychainfinance\"}},\"edit(string,string)\":{\"params\":{\"Order_Number\":\"It is the order Identification Number\",\"ipfsFieldContainerHash\":\"ipfs hash of supplychainfinance metadata\"}},\"getCurrentState()\":{\"details\":\"Requires the current state to be configured before calling this function\"},\"getHistory(uint256)\":{\"details\":\"Requires the index to be within the bounds of the history array\"},\"getRoles()\":{\"returns\":{\"_0\":\"bytes32[] array of raw bytes representing the roles\"}},\"transitionState(bytes32)\":{\"details\":\"Emits a Transition event after a successful transition.\"}},\"title\":\"State machine for SupplyChain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DID()\":{\"notice\":\"Returns a DID of the supplychainfinance\"},\"edit(string,string)\":{\"notice\":\"Updates expense properties\"},\"getAllStates()\":{\"notice\":\"Returns a list of all the possible states of this object.\"},\"getCurrentState()\":{\"notice\":\"Returns the name of the current state of this object.\"},\"getHistory(uint256)\":{\"notice\":\"Returns history as tuple for given index.\"},\"getHistoryLength()\":{\"notice\":\"Returns the length of the history\"},\"getNextStates()\":{\"notice\":\"Returns a list of all the possible next states of the current state.\"},\"getRoles()\":{\"notice\":\"Returns all the roles for this contract\"},\"getState(bytes32)\":{\"notice\":\"Returns state as tuple for give state.\"},\"transitionState(bytes32)\":{\"notice\":\"Transitions the state and executes all callbacks.\"}},\"notice\":\"SupplyChain\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/supplychain/SupplyChain.sol\":\"SupplyChain\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/_library/authentication/GateKeeper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SettleMint.com\\n/**\\n * Copyright (C) SettleMint NV - All Rights Reserved\\n *\\n * Use of this file is strictly prohibited without an active license agreement.\\n * Distribution of this file, via any medium, is strictly prohibited.\\n *\\n * For license inquiries, contact hello@settlemint.com\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/IRoleRegistry.sol\\\";\\n\\n/**\\n * @title Manages contract permissions\\n */\\ncontract GateKeeper {\\n  bytes32 public constant CREATE_PERMISSIONS_ROLE = bytes32(\\\"CREATE_PERMISSIONS_ROLE\\\");\\n  bytes32 public constant ADD_ROLEREGISTRY_ROLE = bytes32(\\\"ADD_ROLEREGISTRY_ROLE\\\");\\n  bytes32 public constant ADD_KNOWNROLE_ROLE = bytes32(\\\"ADD_KNOWNROLE_ROLE\\\");\\n\\n  event SetPermission(address indexed entity, address indexed contractAddress, bytes32 indexed role, bool allowed);\\n  event ChangePermissionManager(address indexed contractAddress, bytes32 indexed role, address indexed manager);\\n\\n  // whether a certain entity has a permission\\n  mapping(address => mapping(address => mapping(bytes32 => bool))) permissions;\\n  // who is the manager of a permission\\n  mapping(address => mapping(bytes32 => address)) permissionManager;\\n  // a mapping of roles to the address of their correspending role registry\\n  mapping(bytes32 => address) roleToRoleRegistry;\\n\\n  // a list of all RoleRegistries\\n  IRoleRegistry[] roleRegistries;\\n\\n  bytes32[] public knownRoles;\\n  mapping(bytes32 => bool) private knownRole;\\n\\n  modifier onlyPermissionManager(address _contract, bytes32 role) {\\n    require(msg.sender == getPermissionManager(_contract, role), \\\"Sender is not the permission manager\\\");\\n    _;\\n  }\\n\\n  modifier auth(bytes32 _role) {\\n    require(hasPermission(msg.sender, address(this), _role), \\\"Sender does not have the correct permissions\\\");\\n    _;\\n  }\\n\\n  modifier authMany(bytes32[] memory _roles) {\\n    bool hasRole = false;\\n    for (uint256 i = 0; i < _roles.length; i++) {\\n      if (hasPermission(msg.sender, address(this), _roles[i])) {\\n        hasRole = true;\\n        break;\\n      }\\n    }\\n    require(hasRole == true, \\\"Sender does not have the correct permissions\\\");\\n    _;\\n  }\\n\\n  modifier authWithCustomReason(bytes32 _role, string memory reason) {\\n    require(hasPermission(msg.sender, address(this), _role), reason);\\n    _;\\n  }\\n\\n  modifier authManyWithCustomReason(bytes32[] memory _roles, string memory reason) {\\n    bool hasRole = false;\\n    for (uint256 i = 0; i < _roles.length; i++) {\\n      if (hasPermission(msg.sender, address(this), _roles[i])) {\\n        hasRole = true;\\n        break;\\n      }\\n    }\\n    require(hasRole == true, reason);\\n    _;\\n  }\\n\\n  constructor() {\\n    _createPermission(msg.sender, address(this), CREATE_PERMISSIONS_ROLE, msg.sender);\\n    _createPermission(msg.sender, address(this), ADD_ROLEREGISTRY_ROLE, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Adds an existing role registry to an internal collection.\\n   * @dev Adds an existing role registry to an internal collection. Access is limited by the ACL.\\n   * @param roleRegistry Address of the role registry to be included\\n   */\\n  function addRoleRegistry(address roleRegistry) external auth(ADD_ROLEREGISTRY_ROLE) {\\n    roleRegistries.push(IRoleRegistry(roleRegistry));\\n  }\\n\\n  /**\\n   * @notice Creates a permission that wasn't previously set.\\n   * @dev Create a new permission granting `_entity` the ability to perform actions of role `_role` on `_contract` (setting `_manager` as parent).\\n   * If a created permission is removed it is possible to reset it with createPermission. Access is limited by the ACL.\\n   * @param _entity Address of the whitelisted entity that will be able to perform the role, this can be a user or a role registry\\n   * @param _contract Address of the app in which the role will be allowed (requires app to depend on kernel for ACL)\\n   * @param _role Identifier for the group of actions allowed to perform\\n   * @param _manager Entity address that will be able to grant and revoke the permission further.\\n   */\\n  function createPermission(\\n    address _entity,\\n    address _contract,\\n    bytes32 _role,\\n    address _manager\\n  ) public auth(CREATE_PERMISSIONS_ROLE) {\\n    if (!knownRole[_role]) {\\n      knownRoles.push(_role);\\n      knownRole[_role] = true;\\n    }\\n\\n    _createPermission(_entity, _contract, _role, _manager);\\n  }\\n\\n  /**\\n   * @notice Grants a permission if allowed.\\n   * @dev Grants `_entity` the ability to perform actions of role `_role` on `_contract`.\\n   * This requires `msg.sender` to be the permission manager.\\n   * @param _entity Address of the whitelisted entity that will be able to perform the role\\n   * @param _contract Address of the app in which the role will be allowed (requires app to depend on kernel for ACL)\\n   * @param _role Identifier for the group of actions allowed to perform\\n   */\\n  function grantPermission(\\n    address _entity,\\n    address _contract,\\n    bytes32 _role\\n  ) public onlyPermissionManager(_contract, _role) {\\n    _setPermission(_entity, _contract, _role, true);\\n  }\\n\\n  /**\\n   * @notice Revokes permission if allowed.\\n   * @dev Revokes `_entity` the ability to perform actions of role `_role` on `_contract`.\\n   * This requires `msg.sender` to be the parent of the permission\\n   * @param _entity Address of the whitelisted entity that will be revoked access\\n   * @param _contract Address of the app in which the role is revoked\\n   * @param _role Identifier for the group of actions allowed to perform\\n   */\\n  function revokePermission(\\n    address _entity,\\n    address _contract,\\n    bytes32 _role\\n  ) public onlyPermissionManager(_contract, _role) {\\n    _setPermission(_entity, _contract, _role, false);\\n  }\\n\\n  /**\\n   * @notice Sets the manager address of a permission on a contract\\n   * @dev Sets `_newManager` as the manager of the permission `_role` on `_contract`\\n   * This requires `msg.sender` to be the parent of the permission\\n   * @param _newManager Address for the new manager\\n   * @param _contract Address of the app in which the permission management is being transferred\\n   * @param _role Identifier for the group of actions allowed to perform\\n   */\\n  function setPermissionManager(\\n    address _newManager,\\n    address _contract,\\n    bytes32 _role\\n  ) public onlyPermissionManager(_contract, _role) {\\n    _setPermissionManager(_newManager, _contract, _role);\\n  }\\n\\n  /**\\n   * @notice Get manager address for a permission on a contract\\n   * @dev Get manager address for the permission `_role` on `_contract`\\n   * @param _contract Contract address\\n   * @param _role Role identifier\\n   * @return Address of the manager for the permission\\n   */\\n  function getPermissionManager(address _contract, bytes32 _role) public view returns (address) {\\n    return permissionManager[_contract][_role];\\n  }\\n\\n  /**\\n   * @notice Lists all the permissions of an entity on a contract address\\n   * @dev Lists all permissions for `_entity` on `_contract`\\n   * @param _entity Entity address\\n   * @param _contract Contract address\\n   * @return bytes32[] List of permissions\\n   */\\n  function permissionsOf(address _entity, address _contract) public view returns (bytes32[] memory) {\\n    uint8 counter = 0;\\n    bytes32[] memory tmp = new bytes32[](knownRoles.length);\\n    for (uint256 i = 0; i < knownRoles.length; i++) {\\n      if (hasPermission(_entity, _contract, knownRoles[i])) {\\n        tmp[counter] = knownRoles[i];\\n        counter += 1;\\n      }\\n    }\\n\\n    bytes32[] memory permissionsList = new bytes32[](counter);\\n    for (uint256 j = 0; j < counter; j++) {\\n      permissionsList[j] = tmp[j];\\n    }\\n\\n    return permissionsList;\\n  }\\n\\n  /**\\n   * @notice Checks ACL on kernel or permission status\\n   * @dev Checks if `_entity` has permission `_role` on `_contract`\\n   * @param _entity Entity address\\n   * @param _contract Contract address\\n   * @param _role Role identifier\\n   * @return Boolean indicating whether the ACL allows the role or not\\n   */\\n  function hasPermission(\\n    address _entity,\\n    address _contract,\\n    bytes32 _role\\n  ) public view returns (bool) {\\n    // the address passed in has the permissions themselves\\n    bool personalPermission = permissions[_entity][_contract][_role];\\n    if (personalPermission) {\\n      return personalPermission;\\n    }\\n    // or we will check if any of the role registries have the permission\\n    for (uint256 counter = 0; counter < roleRegistries.length; counter++) {\\n      address registry = address(roleRegistries[counter]);\\n      bool registryPermission = permissions[registry][_contract][_role];\\n      if (registryPermission) {\\n        if (roleRegistries[counter].hasRole(_entity)) {\\n          return true;\\n        }\\n      }\\n    }\\n    // if, not, deny!\\n    return false;\\n  }\\n\\n  /**\\n   * @notice Retrieves the role registry address for a given role\\n   * @dev Retrieves the role registry for the role `_role`\\n   * @param _role Identifier for the role mapped to a role registry\\n   * @return address of the role registry that corresponds to the role\\n   */\\n  function getRoleRegistryAddress(bytes32 _role) public view returns (address) {\\n    return roleToRoleRegistry[_role];\\n  }\\n\\n  /**\\n   * @notice Sets the role registry address for a given role\\n   * @dev Sets the role registry for the role `_role` to `_address`. Access is limited by the ACL.\\n   * @param _role Identifier for the role mapped to a role registry\\n   * @param _address address of the role registry to put into the store\\n   */\\n  function setRoleRegistryAddress(bytes32 _role, address _address)\\n    public\\n    authWithCustomReason(ADD_ROLEREGISTRY_ROLE, \\\"Sender needs ADD_ROLEREGISTRY_ROLE\\\")\\n  {\\n    roleToRoleRegistry[_role] = _address;\\n\\n    if (!knownRole[_role]) {\\n      knownRoles.push(_role);\\n      knownRole[_role] = true;\\n    }\\n  }\\n\\n  /**\\n   * @dev Internal createPermission for access inside the gatekeeper (on instantiation)\\n   */\\n  function _createPermission(\\n    address _entity,\\n    address _contract,\\n    bytes32 _role,\\n    address _manager\\n  ) internal {\\n    require(\\n      permissionManager[_contract][_role] == address(0x0),\\n      \\\"only allow permission creation when it has no manager (has not been created before)\\\"\\n    );\\n    _setPermission(_entity, _contract, _role, true);\\n    _setPermissionManager(_manager, _contract, _role);\\n  }\\n\\n  /**\\n   * @dev Internal function called to actually save the permission\\n   */\\n  function _setPermission(\\n    address _entity,\\n    address _contract,\\n    bytes32 _role,\\n    bool _allowed\\n  ) internal {\\n    permissions[_entity][_contract][_role] = _allowed;\\n    emit SetPermission(_entity, _contract, _role, _allowed);\\n  }\\n\\n  /**\\n   * @dev Internal function that sets management\\n   */\\n  function _setPermissionManager(\\n    address _newManager,\\n    address _contract,\\n    bytes32 _role\\n  ) internal {\\n    require(_newManager > address(0x0), \\\"_newManager should be a real address\\\");\\n\\n    permissionManager[_contract][_role] = _newManager;\\n    emit ChangePermissionManager(_contract, _role, _newManager);\\n  }\\n}\\n\",\"keccak256\":\"0x3e1d7e3c494b07a3e861395b965acd1651733c5b53c40bd51f0961707eb18e74\",\"license\":\"MIT\"},\"contracts/_library/authentication/Secured.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SettleMint.com\\n/**\\n * Copyright (C) SettleMint NV - All Rights Reserved\\n *\\n * Use of this file is strictly prohibited without an active license agreement.\\n * Distribution of this file, via any medium, is strictly prohibited.\\n *\\n * For license inquiries, contact hello@settlemint.com\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./GateKeeper.sol\\\";\\nimport \\\"../utility/conversions/Converter.sol\\\";\\n\\n/**\\n * @title Executes role-based permission checks\\n */\\ncontract Secured is Converter {\\n  GateKeeper public gateKeeper;\\n\\n  modifier auth(bytes32 _role) {\\n    require(canPerform(msg.sender, _role), \\\"Sender does not have the correct role\\\");\\n    _;\\n  }\\n\\n  modifier authMany(bytes32[] memory _roles) {\\n    bool hasRole = false;\\n    for (uint256 i = 0; i < _roles.length; i++) {\\n      if (canPerform(msg.sender, _roles[i])) {\\n        hasRole = true;\\n        break;\\n      }\\n    }\\n    require(hasRole == true, \\\"Sender does not have the correct role\\\");\\n    _;\\n  }\\n\\n  modifier authWithCustomReason(bytes32 _role, string memory reason) {\\n    require(canPerform(msg.sender, _role), reason);\\n    _;\\n  }\\n\\n  modifier authManyWithCustomReason(bytes32[] memory _roles, string memory reason) {\\n    bool hasRole = false;\\n    for (uint256 i = 0; i < _roles.length; i++) {\\n      if (canPerform(msg.sender, _roles[i])) {\\n        hasRole = true;\\n        break;\\n      }\\n    }\\n    require(hasRole == true, reason);\\n    _;\\n  }\\n\\n  constructor(address _gateKeeper) {\\n    gateKeeper = GateKeeper(_gateKeeper);\\n  }\\n\\n  /**\\n   * @notice Internal function to check if the address has the required role\\n   */\\n  function canPerform(address _sender, bytes32 _role) internal view returns (bool) {\\n    return address(gateKeeper) == address(0x0) || gateKeeper.hasPermission(_sender, address(this), _role);\\n  }\\n}\\n\",\"keccak256\":\"0x2a06506187bf8e569ca61ba9ab159878d4236e2191d00d41f4e830a43cc4108f\",\"license\":\"MIT\"},\"contracts/_library/authentication/interfaces/IRoleRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SettleMint.com\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title RoleRegistry\\n * @dev The RoleRegistry contract defines the methods and data structures to\\n * record if addresses have certain roles or not.\\n */\\nabstract contract IRoleRegistry {\\n  event Designated(address _address);\\n  event Discharged(address _address);\\n  event RoleRegistryCreated(address _address);\\n\\n  /**\\n   * @dev Checks if an address has a certain role\\n   * @param _address The address to check for the role.\\n   * @return hasTheRole A boolean that is True if the address has the role.\\n   */\\n  function hasRole(address _address) public view virtual returns (bool hasTheRole);\\n\\n  /**\\n   * @dev Gives the role to an address\\n   * @param _address The address to designate the role to.\\n   */\\n  function designate(address _address) public virtual;\\n\\n  /**\\n   * @dev Removes the role from an address\\n   * @param _address The address to discharge fromn the role.\\n   */\\n  function discharge(address _address) public virtual;\\n}\\n\",\"keccak256\":\"0xed8900bb78ba684d922a9afc8d8bdf86575c6653a7a60eae7bbe06bccdb79285\",\"license\":\"MIT\"},\"contracts/_library/provenance/statemachine/StateMachine.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SettleMint.com\\n/**\\n * Copyright (C) SettleMint NV - All Rights Reserved\\n *\\n * Use of this file is strictly prohibited without an active license agreement.\\n * Distribution of this file, via any medium, is strictly prohibited.\\n *\\n * For license inquiries, contcontact hello@settlemint.com\\n */\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../authentication/Secured.sol\\\";\\n\\n/**\\n * @title Base contract for state machines\\n */\\nabstract contract StateMachine is Secured {\\n  event Transition(address sender, bytes32 fromState, bytes32 toState);\\n\\n  struct State {\\n    // a boolean to check if the state is actually created\\n    bool hasBeenCreated;\\n    // a mapping of functions that can be executed when in this state\\n    mapping(bytes4 => bool) allowedFunctions;\\n    // a list of all the roles that have been configured for this state\\n    bytes32[] allowedRoles;\\n    // a list of all the preconditions that have been configured for this state\\n    function(bytes32, bytes32) internal view[] preConditions;\\n    // a list of callbacks to execute before the state transition completes\\n    function(bytes32, bytes32) internal[] callbacks;\\n    // a list of states that can be transitioned to\\n    bytes32[] nextStates;\\n    // function that executes logic and then does a StateTransition\\n    bytes4 preFunction;\\n  }\\n\\n  struct StateTransition {\\n    bytes32 fromState;\\n    bytes32 toState;\\n    address actor;\\n    uint256 timestamp;\\n  }\\n\\n  StateTransition[] public history;\\n\\n  mapping(bytes32 => State) internal states;\\n  bytes32[] internal possibleStates;\\n  bytes32 internal currentState;\\n\\n  // a list of selectors that might be allowed functions\\n  bytes4[] internal knownSelectors;\\n  mapping(bytes4 => bool) internal knownSelector;\\n\\n  /**\\n   * @notice Modifier to ensure the statemachine was setup\\n   */\\n  modifier checkStateMachineSetup() {\\n    require(possibleStates.length > 0, \\\"this statemachine has not been setup yet\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Modifier to secure functions for a specific state\\n   */\\n  modifier checkAllowedFunction() {\\n    require(states[currentState].allowedFunctions[msg.sig], \\\"this function is not allowed in this state\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Modifier that checks if we can trigger a transition between the current state and the next state\\n   */\\n  modifier checkTransitionCriteria(bytes32 toState) {\\n    checkAllTransitionCriteria(getCurrentState(), toState);\\n    _;\\n  }\\n\\n  modifier doesStateExist(bytes32 state) {\\n    require(states[state].hasBeenCreated, \\\"the state has not been created yet\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @notice Returns the length of the history\\n   */\\n  function getHistoryLength() public view returns (uint256) {\\n    return history.length;\\n  }\\n\\n  /**\\n   * @notice Returns history as tuple for given index.\\n   * @dev Requires the index to be within the bounds of the history array\\n   */\\n  function getHistory(uint256 index)\\n    public\\n    view\\n    returns (\\n      bytes32 fromState,\\n      bytes32 toState,\\n      address actor,\\n      uint256 timestamp\\n    )\\n  {\\n    require(index >= 0 && index < history.length, \\\"Index out of bounds\\\");\\n    return (history[index].fromState, history[index].toState, history[index].actor, history[index].timestamp);\\n  }\\n\\n  /**\\n   * @notice Returns the name of the current state of this object.\\n   * @dev Requires the current state to be configured before calling this function\\n   */\\n  function getCurrentState() public view returns (bytes32 state) {\\n    require(states[currentState].hasBeenCreated, \\\"the initial state has not been created yet\\\");\\n    return currentState;\\n  }\\n\\n  /**\\n   * @notice Returns a list of all the possible states of this object.\\n   */\\n  function getAllStates() public view returns (bytes32[] memory allStates) {\\n    return possibleStates;\\n  }\\n\\n  /**\\n   * @notice Returns a list of all the possible next states of the current state.\\n   */\\n  function getNextStates() public view returns (bytes32[] memory nextStates) {\\n    return states[currentState].nextStates;\\n  }\\n\\n  /**\\n   * @notice Returns state as tuple for give state.\\n   */\\n  function getState(bytes32 state)\\n    public\\n    view\\n    returns (\\n      bytes32 name,\\n      bytes32[] memory nextStates,\\n      bytes32[] memory allowedRoles,\\n      bytes4[] memory allowedFunctions,\\n      bytes4 preFunction\\n    )\\n  {\\n    State storage s = states[state]; // copy to memory\\n\\n    uint8 counter = 0;\\n    bytes4[] memory tmp = new bytes4[](knownSelectors.length);\\n    for (uint256 i = 0; i < knownSelectors.length; i++) {\\n      if (states[state].allowedFunctions[knownSelectors[i]]) {\\n        tmp[counter] = knownSelectors[i];\\n        counter += 1;\\n      }\\n    }\\n\\n    bytes4[] memory selectors = new bytes4[](counter);\\n    for (uint256 j = 0; j < counter; j++) {\\n      selectors[j] = tmp[j];\\n    }\\n\\n    return (state, s.nextStates, s.allowedRoles, selectors, s.preFunction);\\n  }\\n\\n  /**\\n   * @notice Transitions the state and executes all callbacks.\\n   * @dev Emits a Transition event after a successful transition.\\n   */\\n  function transitionState(bytes32 toState) public checkStateMachineSetup checkTransitionCriteria(toState) {\\n    bytes32 oldState = currentState;\\n    currentState = toState;\\n\\n    function(bytes32, bytes32) internal[] storage callbacks = states[toState].callbacks;\\n    for (uint256 i = 0; i < callbacks.length; i++) {\\n      callbacks[i](oldState, toState);\\n    }\\n\\n    history.push(\\n      StateTransition({fromState: oldState, toState: toState, actor: msg.sender, timestamp: block.timestamp})\\n    );\\n\\n    emit Transition(msg.sender, oldState, currentState);\\n  }\\n\\n  /**\\n   * @dev Abstract function to setup te state machine configuration\\n   */\\n  function setupStateMachine() internal virtual;\\n\\n  function createState(bytes32 stateName) internal {\\n    require(!states[stateName].hasBeenCreated, \\\"this state has already been created\\\");\\n    states[stateName].hasBeenCreated = true;\\n    possibleStates.push(stateName);\\n  }\\n\\n  function addRoleForState(bytes32 state, bytes32 role) internal doesStateExist(state) {\\n    states[state].allowedRoles.push(role);\\n  }\\n\\n  function addAllowedFunctionForState(bytes32 state, bytes4 allowedFunction) internal doesStateExist(state) {\\n    if (!knownSelector[allowedFunction]) {\\n      knownSelector[allowedFunction] = true;\\n      knownSelectors.push(allowedFunction);\\n    }\\n    states[state].allowedFunctions[allowedFunction] = true;\\n  }\\n\\n  function addNextStateForState(bytes32 state, bytes32 nextState)\\n    internal\\n    doesStateExist(state)\\n    doesStateExist(nextState)\\n  {\\n    states[state].nextStates.push(nextState);\\n  }\\n\\n  function addCallbackForState(bytes32 state, function(bytes32, bytes32) internal callback)\\n    internal\\n    doesStateExist(state)\\n  {\\n    states[state].callbacks.push(callback);\\n  }\\n\\n  function addPreConditionForState(bytes32 state, function(bytes32, bytes32) internal view preCondition)\\n    internal\\n    doesStateExist(state)\\n  {\\n    states[state].preConditions.push(preCondition);\\n  }\\n\\n  function setPreFunctionForState(bytes32 state, bytes4 functionSig) internal doesStateExist(state) {\\n    states[state].preFunction = functionSig;\\n  }\\n\\n  /**\\n   * @notice Configures the initial state of an object\\n   */\\n  function setInitialState(bytes32 initialState) internal {\\n    require(states[initialState].hasBeenCreated, \\\"the initial state has not been created yet\\\");\\n    require(\\n      currentState == 0,\\n      \\\"the current state has already been set, so you cannot configure the initial state and override it\\\"\\n    );\\n    currentState = initialState;\\n  }\\n\\n  /**\\n   * @notice Function that checks if we can trigger a transition between two states\\n   * @dev This checks if the states exist, if the user has a role to go to the chosen next state and\\n   * @dev and if all the preconditions give the ok.\\n   */\\n  function checkAllTransitionCriteria(bytes32 fromState, bytes32 toState) private view {\\n    require(states[fromState].hasBeenCreated, \\\"the from state has not been configured in this object\\\");\\n    require(states[toState].hasBeenCreated, \\\"the to state has not been configured in this object\\\");\\n    require(\\n      checkNextStates(fromState, toState),\\n      \\\"the requested next state is not an allowed next state for this transition\\\"\\n    );\\n    require(\\n      checkAllowedRoles(toState),\\n      \\\"the sender of this transaction does not have a role that allows transition between the from and to states\\\"\\n    );\\n    checkPreConditions(fromState, toState);\\n  }\\n\\n  /**\\n   * @notice Checks if it is allowed to transition between the given states\\n   */\\n  function checkNextStates(bytes32 fromState, bytes32 toState) private view returns (bool hasNextState) {\\n    hasNextState = false;\\n    bytes32[] storage nextStates = states[fromState].nextStates;\\n    for (uint256 i = 0; i < nextStates.length; i++) {\\n      if (keccak256(abi.encodePacked(nextStates[i])) == keccak256(abi.encodePacked(toState))) {\\n        hasNextState = true;\\n        break;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @notice Checks all the custom preconditions that determine if it is allowed to transition to a next state\\n   * @dev Make sure the preconditions require or assert their checks and have an understandable error message\\n   */\\n  function checkPreConditions(bytes32 fromState, bytes32 toState) private view {\\n    function(bytes32, bytes32) internal view[] storage preConditions = states[toState].preConditions;\\n    for (uint256 i = 0; i < preConditions.length; i++) {\\n      preConditions[i](fromState, toState);\\n    }\\n  }\\n\\n  /**\\n   * @notice Checks if the sender has a role that is allowed to transition to a next state\\n   */\\n  function checkAllowedRoles(bytes32 toState) private view returns (bool isAllowed) {\\n    isAllowed = false;\\n    bytes32[] storage allowedRoles = states[toState].allowedRoles;\\n    if (allowedRoles.length == 0) {\\n      isAllowed = true;\\n    }\\n    for (uint256 i = 0; i < allowedRoles.length; i++) {\\n      if (canPerform(msg.sender, allowedRoles[i])) {\\n        isAllowed = true;\\n        break;\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x515ede4501cfe0dcacc7cc3da9b1dd04d4d50f68e12a5e20bc81191f88f6f893\",\"license\":\"MIT\"},\"contracts/_library/utility/conversions/Converter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SettleMint.com\\n/**\\n * Copyright (C) SettleMint NV - All Rights Reserved\\n *\\n * Use of this file is strictly prohibited without an active license agreement.\\n * Distribution of this file, via any medium, is strictly prohibited.\\n *\\n * For license inquiries, contact hello@settlemint.com\\n */\\n\\npragma solidity ^0.8.0;\\n\\ncontract Converter {\\n  function addressToString(address data) internal pure returns (string memory) {\\n    bytes memory s = new bytes(40);\\n    for (uint256 i = 0; i < 20; i++) {\\n      bytes1 b = bytes1(uint8(uint256(uint160(data)) / (2**(8 * (19 - i)))));\\n      bytes1 hi = bytes1(uint8(b) / 16);\\n      bytes1 lo = bytes1(uint8(b) - 16 * uint8(hi));\\n      s[2 * i] = char(hi);\\n      s[2 * i + 1] = char(lo);\\n    }\\n    return string(s);\\n  }\\n\\n  function char(bytes1 b) internal pure returns (bytes1 c) {\\n    if (uint8(b) < 10) {\\n      return bytes1(uint8(b) + 0x30);\\n    }\\n    return bytes1(uint8(b) + 0x57);\\n  }\\n\\n  function bytes32ToString(bytes32 x) internal pure returns (string memory) {\\n    bytes memory bytesString = new bytes(32);\\n    uint256 charCount = 0;\\n    for (uint256 j = 0; j < 32; j++) {\\n      bytes1 charr = bytes1(bytes32(uint256(x) * 2**(8 * j)));\\n      if (charr != 0) {\\n        bytesString[charCount] = charr;\\n        charCount++;\\n      }\\n    }\\n    bytes memory bytesStringTrimmed = new bytes(charCount);\\n    for (uint256 k = 0; k < charCount; k++) {\\n      bytesStringTrimmed[k] = bytesString[k];\\n    }\\n    return string(bytesStringTrimmed);\\n  }\\n\\n  function uintToString(uint256 i) internal pure returns (string memory) {\\n    unchecked {\\n      if (i == 0) {\\n        return \\\"0\\\";\\n      }\\n\\n      uint256 j = i;\\n      uint256 length;\\n      while (j != 0) {\\n        length++;\\n        j /= 10;\\n      }\\n\\n      uint256 ii = i;\\n      bytes memory bstr = new bytes(length);\\n      uint256 k = length - 1;\\n      while (ii != 0) {\\n        bstr[k--] = bytes1(uint8(48 + (ii % 10)));\\n        ii /= 10;\\n      }\\n\\n      return string(bstr);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x7b4a1f950a299fd21d157843c75500f7c5e3722bfb957625c5df9438431d52c4\",\"license\":\"MIT\"},\"contracts/_library/utility/metadata/FileFieldContainer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SettleMint.com\\n/**\\n * Copyright (C) SettleMint NV - All Rights Reserved\\n *\\n * Use of this file is strictly prohibited without an active license agreement.\\n * Distribution of this file, via any medium, is strictly prohibited.\\n *\\n * For license inquiries, contact hello@settlemint.com\\n */\\n\\npragma solidity ^0.8.0;\\n\\ncontract FileFieldContainer {\\n  bytes32[] internal _fileKeys;\\n  mapping(bytes32 => bool) internal _knownFileKeys;\\n  mapping(bytes32 => string) internal _fileFieldsMap;\\n\\n  function setContractFile(bytes32 key, string memory file) public {\\n    if (!_knownFileKeys[key]) {\\n      _fileKeys.push(key);\\n      _knownFileKeys[key] = true;\\n    }\\n\\n    _fileFieldsMap[key] = file;\\n  }\\n}\\n\",\"keccak256\":\"0xd0104875dc471508786a255a4aee785a0ce1c73e678a512e40fff405a8b907b8\",\"license\":\"MIT\"},\"contracts/_library/utility/metadata/IpfsFieldContainer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SettleMint.com\\n/**\\n * Copyright (C) SettleMint NV - All Rights Reserved\\n *\\n * Use of this file is strictly prohibited without an active license agreement.\\n * Distribution of this file, via any medium, is strictly prohibited.\\n *\\n * For license inquiries, contact hello@settlemint.com\\n */\\n\\npragma solidity ^0.8.0;\\n\\ncontract IpfsFieldContainer {\\n  bytes32 public constant UPDATE_IPFSCONTAINERHASH_ROLE = \\\"UPDATE_IPFSCONTAINERHASH_ROLE\\\";\\n  string public _ipfsFieldContainerHash;\\n\\n  function getIpfsFieldContainerHash() public view virtual returns (string memory) {\\n    return _ipfsFieldContainerHash;\\n  }\\n\\n  function setIpfsFieldContainerHash(string memory ipfsFieldContainerHash) public virtual {\\n    _ipfsFieldContainerHash = ipfsFieldContainerHash;\\n  }\\n}\\n\",\"keccak256\":\"0x30b8c3198d27e0985baaf49642971d0e34586bbf5e88dc9c735079c46ddbc963\",\"license\":\"MIT\"},\"contracts/supplychain/SupplyChain.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// SettleMint.com\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../_library/authentication/Secured.sol\\\";\\nimport \\\"../_library/provenance/statemachine/StateMachine.sol\\\";\\nimport \\\"../_library/utility/metadata/IpfsFieldContainer.sol\\\";\\nimport \\\"../_library/utility/metadata/FileFieldContainer.sol\\\";\\nimport \\\"../_library/utility/conversions/Converter.sol\\\";\\n\\n/**\\n * SupplyChain\\n\\n *\\n * @title State machine for SupplyChain\\n */\\ncontract SupplyChain is Converter, StateMachine, IpfsFieldContainer, FileFieldContainer {\\n  bytes32 public constant STATE_DEMAND_GENERATED = \\\"DEMAND GENERATED\\\";\\n  bytes32 public constant STATE_ORDER_PLACED = \\\"ORDER PLACED\\\";\\n  bytes32 public constant STATE_ORDER_ACCEPTED = \\\"ACCEPTED\\\";\\n  bytes32 public constant STATE_ORDER_ON_HOLD = \\\"ON HOLD\\\";\\n  bytes32 public constant STATE_ORDER_DECLINED = \\\"DECLINED\\\";\\n\\n  bytes32 public constant STATE_IN_PRODUCTION = \\\"IN PRODUCTION\\\";\\n  bytes32 public constant STATE_READY_FOR_DISPATCH = \\\"READY FOR DISPATCH\\\";\\n  bytes32 public constant STATE_REACHED_TRANSFER_POINT = \\\"AT TRANSFER POINT\\\";\\n\\n  bytes32 public constant STATE_RECEIEVED_AT_WAREHOUSE = \\\"RECIEVED AT WAREHOUSE\\\";\\n  bytes32 public constant STATE_STOCKED_AT_WAREHOUSE = \\\"STOCKED AT WAREHOUSE\\\";\\n  bytes32 public constant STATE_OUT_FOR_DELIVERY = \\\"OUT FOR DELIVERY\\\";\\n  bytes32 public constant STATE_RECIEVED_BY_BUYER = \\\"RECIEVED BY BUYER\\\";\\n  bytes32 public constant STATE_PRODUCT_SHELVED = \\\"SHELVED\\\";\\n  bytes32 public constant STATE_PRODUCT_SOLD = \\\"SOLD\\\";\\n  bytes32 public constant STATE_PRODUCT_DISCARDED = \\\"DISCARDED\\\";\\n\\n  bytes32 public constant ROLE_ADMIN = \\\"ROLE_ADMIN\\\";\\n  bytes32 public constant ROLE_BUYER = \\\"ROLE_BUYER\\\";\\n  bytes32 public constant ROLE_SUPPLIER = \\\"ROLE_SUPPLIER\\\";\\n  bytes32 public constant ROLE_TRANSPORTER = \\\"ROLE_TRANSPORTER\\\";\\n  bytes32 public constant ROLE_WAREHOUSE = \\\"ROLE_WAREHOUSE\\\";\\n\\n  bytes32[] public _roles = [ROLE_ADMIN, ROLE_BUYER, ROLE_SUPPLIER, ROLE_TRANSPORTER];\\n\\n  string public _uiFieldDefinitionsHash;\\n  string public _Order_Number;\\n\\n  constructor(\\n    address gateKeeper,\\n    string memory Order_Number,\\n    string memory ipfsFieldContainerHash,\\n    string memory uiFieldDefinitionsHash\\n  ) Secured(gateKeeper) {\\n    _Order_Number = Order_Number;\\n    _ipfsFieldContainerHash = ipfsFieldContainerHash;\\n    _uiFieldDefinitionsHash = uiFieldDefinitionsHash;\\n    setupStateMachine();\\n  }\\n\\n  /**\\n   * @notice Updates expense properties\\n   * @param Order_Number It is the order Identification Number\\n   * @param ipfsFieldContainerHash ipfs hash of supplychainfinance metadata\\n   */\\n  function edit(string memory Order_Number, string memory ipfsFieldContainerHash) public {\\n    _Order_Number = Order_Number;\\n    _ipfsFieldContainerHash = ipfsFieldContainerHash;\\n  }\\n\\n  /**\\n   * @notice Returns a DID of the supplychainfinance\\n   * @dev Returns a unique DID (Decentralized Identifier) for the supplychainfinance.\\n   * @return string representing the DID of the supplychainfinance\\n   */\\n  function DID() public view returns (string memory) {\\n    return string(abi.encodePacked(\\\"did:demo:supplychainfinance:\\\", _Order_Number));\\n  }\\n\\n  /**\\n   * @notice Returns all the roles for this contract\\n   * @return bytes32[] array of raw bytes representing the roles\\n   */\\n  function getRoles() public view returns (bytes32[] memory) {\\n    return _roles;\\n  }\\n\\n  function setupStateMachine() internal override {\\n    //create all states\\n\\n    createState(STATE_DEMAND_GENERATED);\\n    createState(STATE_ORDER_PLACED);\\n    createState(STATE_ORDER_ACCEPTED);\\n    createState(STATE_ORDER_ON_HOLD);\\n    createState(STATE_ORDER_DECLINED);\\n    createState(STATE_IN_PRODUCTION);\\n    createState(STATE_READY_FOR_DISPATCH);\\n    createState(STATE_REACHED_TRANSFER_POINT);\\n    createState(STATE_RECEIEVED_AT_WAREHOUSE);\\n    createState(STATE_STOCKED_AT_WAREHOUSE);\\n    createState(STATE_OUT_FOR_DELIVERY);\\n    createState(STATE_RECIEVED_BY_BUYER);\\n    createState(STATE_PRODUCT_SHELVED);\\n    createState(STATE_PRODUCT_SOLD);\\n    createState(STATE_PRODUCT_DISCARDED);\\n\\n    // add properties\\n\\n    addNextStateForState(STATE_DEMAND_GENERATED, STATE_ORDER_PLACED);\\n    addNextStateForState(STATE_ORDER_PLACED, STATE_ORDER_ACCEPTED);\\n    addNextStateForState(STATE_ORDER_PLACED, STATE_ORDER_ON_HOLD);\\n    addNextStateForState(STATE_ORDER_PLACED, STATE_ORDER_DECLINED);\\n    addNextStateForState(STATE_ORDER_ACCEPTED, STATE_IN_PRODUCTION);\\n    addNextStateForState(STATE_IN_PRODUCTION, STATE_READY_FOR_DISPATCH);\\n    addNextStateForState(STATE_READY_FOR_DISPATCH, STATE_REACHED_TRANSFER_POINT);\\n    addNextStateForState(STATE_REACHED_TRANSFER_POINT, STATE_RECEIEVED_AT_WAREHOUSE);\\n    addNextStateForState(STATE_RECEIEVED_AT_WAREHOUSE, STATE_STOCKED_AT_WAREHOUSE);\\n    addNextStateForState(STATE_STOCKED_AT_WAREHOUSE, STATE_OUT_FOR_DELIVERY);\\n    addNextStateForState(STATE_OUT_FOR_DELIVERY, STATE_RECIEVED_BY_BUYER);\\n    addNextStateForState(STATE_RECIEVED_BY_BUYER, STATE_PRODUCT_SHELVED);\\n    addNextStateForState(STATE_RECIEVED_BY_BUYER, STATE_PRODUCT_SOLD);\\n    addNextStateForState(STATE_RECIEVED_BY_BUYER, STATE_PRODUCT_DISCARDED);\\n\\n    addRoleForState(STATE_DEMAND_GENERATED, ROLE_BUYER);\\n    addRoleForState(STATE_ORDER_PLACED, ROLE_BUYER);\\n    addRoleForState(STATE_ORDER_ACCEPTED, ROLE_SUPPLIER);\\n    addRoleForState(STATE_ORDER_ON_HOLD, ROLE_SUPPLIER);\\n    addRoleForState(STATE_ORDER_DECLINED, ROLE_SUPPLIER);\\n    addRoleForState(STATE_IN_PRODUCTION, ROLE_SUPPLIER);\\n    addRoleForState(STATE_READY_FOR_DISPATCH, ROLE_SUPPLIER);\\n    addRoleForState(STATE_REACHED_TRANSFER_POINT, ROLE_TRANSPORTER);\\n    addRoleForState(STATE_RECEIEVED_AT_WAREHOUSE, ROLE_WAREHOUSE);\\n    addRoleForState(STATE_STOCKED_AT_WAREHOUSE, ROLE_WAREHOUSE);\\n    addRoleForState(STATE_OUT_FOR_DELIVERY, ROLE_TRANSPORTER);\\n    addRoleForState(STATE_RECIEVED_BY_BUYER, ROLE_BUYER);\\n    addRoleForState(STATE_PRODUCT_SHELVED, ROLE_BUYER);\\n    addRoleForState(STATE_PRODUCT_SOLD, ROLE_BUYER);\\n    addRoleForState(STATE_PRODUCT_DISCARDED, ROLE_BUYER);\\n    addRoleForState(STATE_DEMAND_GENERATED, ROLE_ADMIN);\\n    addRoleForState(STATE_ORDER_PLACED, ROLE_ADMIN);\\n    addRoleForState(STATE_ORDER_ACCEPTED, ROLE_ADMIN);\\n    addRoleForState(STATE_ORDER_ON_HOLD, ROLE_ADMIN);\\n    addRoleForState(STATE_ORDER_DECLINED, ROLE_ADMIN);\\n    addRoleForState(STATE_IN_PRODUCTION, ROLE_ADMIN);\\n    addRoleForState(STATE_READY_FOR_DISPATCH, ROLE_ADMIN);\\n    addRoleForState(STATE_REACHED_TRANSFER_POINT, ROLE_ADMIN);\\n    addRoleForState(STATE_RECEIEVED_AT_WAREHOUSE, ROLE_ADMIN);\\n    addRoleForState(STATE_STOCKED_AT_WAREHOUSE, ROLE_ADMIN);\\n    addRoleForState(STATE_OUT_FOR_DELIVERY, ROLE_ADMIN);\\n    addRoleForState(STATE_RECIEVED_BY_BUYER, ROLE_ADMIN);\\n    addRoleForState(STATE_PRODUCT_SHELVED, ROLE_ADMIN);\\n    addRoleForState(STATE_PRODUCT_SOLD, ROLE_ADMIN);\\n    addRoleForState(STATE_PRODUCT_DISCARDED, ROLE_ADMIN);\\n\\n    setInitialState(STATE_DEMAND_GENERATED);\\n  }\\n}\\n\",\"keccak256\":\"0x6ee67f88121199ba7a6a7ddaf26655fd6e1267367cc16e304fba7ff75434db85\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x610100604052692927a622afa0a226a4a760b11b6080908152692927a622afa12aaca2a960b11b60a0526c2927a622afa9aaa8282624a2a960991b60c0526f2927a622afaa2920a729a827a92a22a960811b60e0526200006490600b90600462000cbd565b503480156200007257600080fd5b50604051620029b9380380620029b9833981016040819052620000959162000e6d565b600080546001600160a01b0319166001600160a01b0386161790558251620000c590600d90602086019062000d0d565b508151620000db90600790602085019062000d0d565b508051620000f190600c90602084019062000d0d565b50620000fc62000106565b5050505062000f5c565b620001246f1111535053910811d15391549055115160821b6200097c565b6200013e6b13d49111548814131050d15160a21b6200097c565b62000154671050d0d15415115160c21b6200097c565b620001696613d3881213d31160ca1b6200097c565b6200017f67111150d31253915160c21b6200097c565b6200019a6c24a710282927a22aa1aa24a7a760991b6200097c565b620001b4600080516020620029398339815191526200097c565b620001ce600080516020620029798339815191526200097c565b620001e8600080516020620028f98339815191526200097c565b62000202600080516020620029598339815191526200097c565b620002206f4f555420464f522044454c495645525960801b6200097c565b6200023a600080516020620029998339815191526200097c565b6200024f6614d2115315915160ca1b6200097c565b620002616314d3d31160e21b6200097c565b6200027868111254d0d05491115160ba1b6200097c565b620002a66f1111535053910811d15391549055115160821b6b13d49111548814131050d15160a21b62000a3a565b620002cc6b13d49111548814131050d15160a21b671050d0d15415115160c21b62000a3a565b620002f16b13d49111548814131050d15160a21b6613d3881213d31160ca1b62000a3a565b620003176b13d49111548814131050d15160a21b67111150d31253915160c21b62000a3a565b6200033e671050d0d15415115160c21b6c24a710282927a22aa1aa24a7a760991b62000a3a565b620003696c24a710282927a22aa1aa24a7a760991b6000805160206200293983398151915262000a3a565b62000393600080516020620029398339815191526000805160206200297983398151915262000a3a565b620003bd60008051602062002979833981519152600080516020620028f983398151915262000a3a565b620003e7600080516020620028f98339815191526000805160206200295983398151915262000a3a565b62000415600080516020620029598339815191526f4f555420464f522044454c495645525960801b62000a3a565b620004436f4f555420464f522044454c495645525960801b6000805160206200299983398151915262000a3a565b62000468600080516020620029998339815191526614d2115315915160ca1b62000a3a565b6200048a600080516020620029998339815191526314d3d31160e21b62000a3a565b620004b16000805160206200299983398151915268111254d0d05491115160ba1b62000a3a565b620004dd6f1111535053910811d15391549055115160821b692927a622afa12aaca2a960b11b62000b1a565b620005056b13d49111548814131050d15160a21b692927a622afa12aaca2a960b11b62000b1a565b6200052c671050d0d15415115160c21b6c2927a622afa9aaa8282624a2a960991b62000b1a565b620005526613d3881213d31160ca1b6c2927a622afa9aaa8282624a2a960991b62000b1a565b6200057967111150d31253915160c21b6c2927a622afa9aaa8282624a2a960991b62000b1a565b620005a56c24a710282927a22aa1aa24a7a760991b6c2927a622afa9aaa8282624a2a960991b62000b1a565b620005d0600080516020620029398339815191526c2927a622afa9aaa8282624a2a960991b62000b1a565b620005fe600080516020620029798339815191526f2927a622afaa2920a729a827a92a22a960811b62000b1a565b6200062a600080516020620028f98339815191526d524f4c455f57415245484f55534560901b62000b1a565b62000656600080516020620029598339815191526d524f4c455f57415245484f55534560901b62000b1a565b620006886f4f555420464f522044454c495645525960801b6f2927a622afaa2920a729a827a92a22a960811b62000b1a565b620006b060008051602062002999833981519152692927a622afa12aaca2a960b11b62000b1a565b620006d36614d2115315915160ca1b692927a622afa12aaca2a960b11b62000b1a565b620006f36314d3d31160e21b692927a622afa12aaca2a960b11b62000b1a565b6200071868111254d0d05491115160ba1b692927a622afa12aaca2a960b11b62000b1a565b620007446f1111535053910811d15391549055115160821b692927a622afa0a226a4a760b11b62000b1a565b6200076c6b13d49111548814131050d15160a21b692927a622afa0a226a4a760b11b62000b1a565b62000790671050d0d15415115160c21b692927a622afa0a226a4a760b11b62000b1a565b620007b36613d3881213d31160ca1b692927a622afa0a226a4a760b11b62000b1a565b620007d767111150d31253915160c21b692927a622afa0a226a4a760b11b62000b1a565b620008006c24a710282927a22aa1aa24a7a760991b692927a622afa0a226a4a760b11b62000b1a565b6200082860008051602062002939833981519152692927a622afa0a226a4a760b11b62000b1a565b6200085060008051602062002979833981519152692927a622afa0a226a4a760b11b62000b1a565b62000878600080516020620028f9833981519152692927a622afa0a226a4a760b11b62000b1a565b620008a060008051602062002959833981519152692927a622afa0a226a4a760b11b62000b1a565b620008cc6f4f555420464f522044454c495645525960801b692927a622afa0a226a4a760b11b62000b1a565b620008f460008051602062002999833981519152692927a622afa0a226a4a760b11b62000b1a565b620009176614d2115315915160ca1b692927a622afa0a226a4a760b11b62000b1a565b620009376314d3d31160e21b692927a622afa0a226a4a760b11b62000b1a565b6200095c68111254d0d05491115160ba1b692927a622afa0a226a4a760b11b62000b1a565b6200097a6f1111535053910811d15391549055115160821b62000b9d565b565b60008181526002602052604090205460ff1615620009ed5760405162461bcd60e51b815260206004820152602360248201527f746869732073746174652068617320616c7265616479206265656e20637265616044820152621d195960ea1b60648201526084015b60405180910390fd5b6000818152600260205260408120805460ff191660019081179091556003805491820181559091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0155565b600082815260026020526040902054829060ff1662000a965760405162461bcd60e51b8152602060048201526022602482015260008051602062002919833981519152604482015261195d60f21b6064820152608401620009e4565b600082815260026020526040902054829060ff1662000af25760405162461bcd60e51b8152602060048201526022602482015260008051602062002919833981519152604482015261195d60f21b6064820152608401620009e4565b5050600091825260026020908152604083206005018054600181018255908452922090910155565b600082815260026020526040902054829060ff1662000b765760405162461bcd60e51b8152602060048201526022602482015260008051602062002919833981519152604482015261195d60f21b6064820152608401620009e4565b50600091825260026020818152604084209091018054600181018255908452922090910155565b60008181526002602052604090205460ff1662000c105760405162461bcd60e51b815260206004820152602a60248201527f74686520696e697469616c20737461746520686173206e6f74206265656e20636044820152691c99585d1959081e595d60b21b6064820152608401620009e4565b6004541562000cb85760405162461bcd60e51b815260206004820152606160248201527f7468652063757272656e742073746174652068617320616c726561647920626560448201527f656e207365742c20736f20796f752063616e6e6f7420636f6e6669677572652060648201527f74686520696e697469616c20737461746520616e64206f7665727269646520696084820152601d60fa1b60a482015260c401620009e4565b600455565b82805482825590600052602060002090810192821562000cfb579160200282015b8281111562000cfb57825182559160200191906001019062000cde565b5062000d0992915062000d89565b5090565b82805462000d1b9062000f1f565b90600052602060002090601f01602090048101928262000d3f576000855562000cfb565b82601f1062000d5a57805160ff191683800117855562000cfb565b8280016001018555821562000cfb579182018281111562000cfb57825182559160200191906001019062000cde565b5b8082111562000d09576000815560010162000d8a565b634e487b7160e01b600052604160045260246000fd5b600082601f83011262000dc857600080fd5b81516001600160401b038082111562000de55762000de562000da0565b604051601f8301601f19908116603f0116810190828211818310171562000e105762000e1062000da0565b8160405283815260209250868385880101111562000e2d57600080fd5b600091505b8382101562000e51578582018301518183018401529082019062000e32565b8382111562000e635760008385830101525b9695505050505050565b6000806000806080858703121562000e8457600080fd5b84516001600160a01b038116811462000e9c57600080fd5b60208601519094506001600160401b038082111562000eba57600080fd5b62000ec88883890162000db6565b9450604087015191508082111562000edf57600080fd5b62000eed8883890162000db6565b9350606087015191508082111562000f0457600080fd5b5062000f138782880162000db6565b91505092959194509250565b600181811c9082168062000f3457607f821691505b6020821081141562000f5657634e487b7160e01b600052602260045260246000fd5b50919050565b61198d8062000f6c6000396000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c80639086b2e31161013b578063be5bfaad116100b8578063ecf870cc1161007c578063ecf870cc14610553578063ef120a6e1461056d578063f4a979a314610575578063f78014fd14610588578063fcbb59071461059b57600080fd5b8063be5bfaad146104e7578063c8691b2a14610503578063d391014b14610516578063d8b005271461052a578063ddb78f0a1461054157600080fd5b8063a7a38f0b116100ff578063a7a38f0b1461044e578063aa535fb414610490578063ab2ca63d146104a4578063b40b3423146104bb578063bc7b8b24146104cd57600080fd5b80639086b2e31461040f578063910fd10a146104255780639d861fe01461042d578063a4ddb0711461043e578063a54df3321461044657600080fd5b8063489f19eb116101c9578063694f11051161018d578063694f1105146103b357806371061398146103c65780637b581098146103ce5780638624c269146103e95780638cb92832146103f757600080fd5b8063489f19eb146103615780634de6740e1461037657806350123ff71461037e5780635478f4681461039857806356c57bd1146103a057600080fd5b8063304b1bd111610210578063304b1bd1146102eb578063378aa701146102fe5780633a7fae12146103065780633e44694f1461032157806345d61ded1461033657600080fd5b806309648a9d1461024d5780630b1cbe2f1461027a5780630c0c3059146102a75780631eeda95d146102b85780632e2bc0d5146102d6575b600080fd5b61026061025b3660046114e4565b6105c2565b604051610271959493929190611538565b60405180910390f35b6102997452454349455645442041542057415245484f55534560581b81565b604051908152602001610271565b6102996613d3881213d31160ca1b81565b6102997353544f434b45442041542057415245484f55534560601b81565b6102de6108aa565b60405161027191906115c4565b6102996102f93660046114e4565b610910565b610299610931565b610299702922a1a4a2ab22a210212c90212aaca2a960791b81565b6103296109b1565b60405161027191906115d7565b600054610349906001600160a01b031681565b6040516001600160a01b039091168152602001610271565b61037461036f3660046116cf565b6109d9565b005b610329610a05565b6102996f4f555420464f522044454c495645525960801b81565b600154610299565b6103746103ae366004611733565b610a93565b6103746103c13660046114e4565b610aaa565b6102de610cdb565b610299701055081514905394d19154881413d25395607a1b81565b6102996314d3d31160e21b81565b6102996d524f4c455f57415245484f55534560901b81565b6102996b13d49111548814131050d15160a21b81565b610329610d31565b6102996614d2115315915160ca1b81565b6102de610d3e565b610329610d94565b61046161045c3660046114e4565b610da1565b604051610271949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b610299692927a622afa12aaca2a960b11b81565b6102996c2927a622afa9aaa8282624a2a960991b81565b61029967111150d31253915160c21b81565b6102996f2927a622afaa2920a729a827a92a22a960811b81565b610299710a48a8288b2408c9ea4408892a6a082a886960731b81565b6104616105113660046114e4565b610de4565b610299692927a622afa0a226a4a760b11b81565b6102996c24a710282927a22aa1aa24a7a760991b81565b610299671050d0d15415115160c21b81565b6102996f1111535053910811d15391549055115160821b81565b610329610ee6565b610374610583366004611770565b610f6f565b61029968111254d0d05491115160ba1b81565b6102997f5550444154455f49504653434f4e5441494e4552484153485f524f4c4500000081565b60008181526002602052604081206005546060918291829185918290819067ffffffffffffffff8111156105f8576105f861162c565b604051908082528060200260200182016040528015610621578160200160208202803683370190505b50905060005b60055481101561072257600260008b815260200190815260200160002060010160006005838154811061065c5761065c6117ad565b6000918252602080832060088304015460079092166004026101000a90910460e01b6001600160e01b031916835282019290925260400190205460ff161561071057600581815481106106b1576106b16117ad565b90600052602060002090600891828204019190066004029054906101000a900460e01b828460ff16815181106106e9576106e96117ad565b6001600160e01b03199092166020928302919091019091015261070d6001846117d9565b92505b8061071a816117fe565b915050610627565b5060008260ff1667ffffffffffffffff8111156107415761074161162c565b60405190808252806020026020018201604052801561076a578160200160208202803683370190505b50905060005b8360ff168110156107d25782818151811061078d5761078d6117ad565b60200260200101518282815181106107a7576107a76117ad565b6001600160e01b031990921660209283029190910190910152806107ca816117fe565b915050610770565b50898460050185600201838760060160009054906101000a900460e01b8380548060200260200160405190810160405280929190818152602001828054801561083a57602002820191906000526020600020905b815481526020019060010190808311610826575b505050505093508280548060200260200160405190810160405280929190818152602001828054801561088c57602002820191906000526020600020905b815481526020019060010190808311610878575b50505050509250985098509850985098505050505091939590929450565b60045460009081526002602090815260409182902060050180548351818402810184019094528084526060939283018282801561090657602002820191906000526020600020905b8154815260200190600101908083116108f2575b5050505050905090565b600b818154811061092057600080fd5b600091825260209091200154905081565b60045460009081526002602052604081205460ff166109aa5760405162461bcd60e51b815260206004820152602a60248201527f74686520696e697469616c20737461746520686173206e6f74206265656e20636044820152691c99585d1959081e595d60b21b60648201526084015b60405180910390fd5b5060045490565b6060600d6040516020016109c59190611854565b604051602081830303815290604052905090565b81516109ec90600d906020850190611441565b508051610a00906007906020840190611441565b505050565b600c8054610a1290611819565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3e90611819565b8015610a8b5780601f10610a6057610100808354040283529160200191610a8b565b820191906000526020600020905b815481529060010190602001808311610a6e57829003601f168201915b505050505081565b8051610aa6906007906020840190611441565b5050565b600354610b0a5760405162461bcd60e51b815260206004820152602860248201527f746869732073746174656d616368696e6520686173206e6f74206265656e2073604482015267195d1d5c081e595d60c21b60648201526084016109a1565b80610b1c610b16610931565b82610fef565b600480548382556000848152600260205260408120919291909101905b8154811015610ba457610b928386848481548110610b5957610b596117ad565b90600052602060002090600491828204019190066008029054906101000a900480156114c5021767ffffffffffffffff1663ffffffff16565b80610b9c816117fe565b915050610b39565b506040805160808101825283815260208082018781523383850181815242606080870191825260018054808201825560009190915296517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660049889029081019190915594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf786015591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8850180546001600160a01b0319166001600160a01b03909216919091179055517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf99093019290925592548451938452918301869052928201527f483a31c379a4b707332853662276a3424ec44f0ccbfc20d78fd9d143694f7669910160405180910390a150505050565b6060600b80548060200260200160405190810160405280929190818152602001828054801561090657602002820191906000526020600020908154815260200190600101908083116108f2575050505050905090565b60078054610a1290611819565b6060600380548060200260200160405190810160405280929190818152602001828054801561090657602002820191906000526020600020908154815260200190600101908083116108f2575050505050905090565b600d8054610a1290611819565b60018181548110610db157600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350916001600160a01b03169084565b60008080806001548510610e305760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016109a1565b60018581548110610e4357610e436117ad565b90600052602060002090600402016000015460018681548110610e6857610e686117ad565b90600052602060002090600402016001015460018781548110610e8d57610e8d6117ad565b906000526020600020906004020160020160009054906101000a90046001600160a01b031660018881548110610ec557610ec56117ad565b90600052602060002090600402016003015493509350935093509193509193565b606060078054610ef590611819565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2190611819565b80156109065780601f10610f4357610100808354040283529160200191610906565b820191906000526020600020905b815481529060010190602001808311610f5157509395945050505050565b60008281526009602052604090205460ff16610fd0576008805460018181019092557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3018390556000838152600960205260409020805460ff191690911790555b6000828152600a602090815260409091208251610a0092840190611441565b60008281526002602052604090205460ff1661106b5760405162461bcd60e51b815260206004820152603560248201527f7468652066726f6d20737461746520686173206e6f74206265656e20636f6e666044820152741a59dd5c9959081a5b881d1a1a5cc81bd89a9958dd605a1b60648201526084016109a1565b60008181526002602052604090205460ff166110e55760405162461bcd60e51b815260206004820152603360248201527f74686520746f20737461746520686173206e6f74206265656e20636f6e6669676044820152721d5c9959081a5b881d1a1a5cc81bd89a9958dd606a1b60648201526084016109a1565b6110ef8282611230565b6111735760405162461bcd60e51b815260206004820152604960248201527f74686520726571756573746564206e657874207374617465206973206e6f742060448201527f616e20616c6c6f776564206e65787420737461746520666f72207468697320746064820152683930b739b4ba34b7b760b91b608482015260a4016109a1565b61117c816112dc565b6112265760405162461bcd60e51b815260206004820152606960248201527f7468652073656e646572206f662074686973207472616e73616374696f6e206460448201527f6f6573206e6f742068617665206120726f6c65207468617420616c6c6f77732060648201527f7472616e736974696f6e206265747765656e207468652066726f6d20616e6420608482015268746f2073746174657360b81b60a482015260c4016109a1565b610aa68282611351565b6000828152600260205260408120600501815b81548110156112d45760408051602081018690520160405160208183030381529060405280519060200120828281548110611280576112806117ad565b906000526020600020015460405160200161129d91815260200190565b6040516020818303038152906040528051906020012014156112c257600192506112d4565b806112cc816117fe565b915050611243565b505092915050565b600081815260026020819052604082200180546112f857600191505b60005b815481101561134a5761132a3383838154811061131a5761131a6117ad565b906000526020600020015461139c565b15611338576001925061134a565b80611342816117fe565b9150506112fb565b5050919050565b6000818152600260205260408120600301905b8154811015611396576113848484848481548110610b5957610b596117ad565b8061138e816117fe565b915050611364565b50505050565b600080546001600160a01b0316158061143a5750600054604051630dace25b60e31b81526001600160a01b0385811660048301523060248301526044820185905290911690636d6712d89060640160206040518083038186803b15801561140257600080fd5b505afa158015611416573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143a919061191f565b9392505050565b82805461144d90611819565b90600052602060002090601f01602090048101928261146f57600085556114b5565b82601f1061148857805160ff19168380011785556114b5565b828001600101855582156114b5579182015b828111156114b557825182559160200191906001019061149a565b506114c19291506114cf565b5090565b6114cd611941565b565b5b808211156114c157600081556001016114d0565b6000602082840312156114f657600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561152d57815187529582019590820190600101611511565b509495945050505050565b8581526000602060a08184015261155260a08401886114fd565b838103604085015261156481886114fd565b8481036060860152865180825283880192509083019060005b818110156115a35783516001600160e01b0319168352928401929184019160010161157d565b505080935050505063ffffffff60e01b831660808301529695505050505050565b60208152600061143a60208301846114fd565b600060208083528351808285015260005b81811015611604578581018301518582016040015282016115e8565b81811115611616576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261165357600080fd5b813567ffffffffffffffff8082111561166e5761166e61162c565b604051601f8301601f19908116603f011681019082821181831017156116965761169661162c565b816040528381528660208588010111156116af57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156116e257600080fd5b823567ffffffffffffffff808211156116fa57600080fd5b61170686838701611642565b9350602085013591508082111561171c57600080fd5b5061172985828601611642565b9150509250929050565b60006020828403121561174557600080fd5b813567ffffffffffffffff81111561175c57600080fd5b61176884828501611642565b949350505050565b6000806040838503121561178357600080fd5b82359150602083013567ffffffffffffffff8111156117a157600080fd5b61172985828601611642565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156117f6576117f66117c3565b019392505050565b6000600019821415611812576118126117c3565b5060010190565b600181811c9082168061182d57607f821691505b6020821081141561184e57634e487b7160e01b600052602260045260246000fd5b50919050565b7f6469643a64656d6f3a737570706c79636861696e66696e616e63653a0000000081526000601c6000845481600182811c91508083168061189657607f831692505b60208084108214156118b657634e487b7160e01b86526022600452602486fd5b8180156118ca57600181146118df57611910565b60ff1986168a890152848a0188019650611910565b60008b81526020902060005b868110156119065781548c82018b01529085019083016118eb565b505087858b010196505b50949998505050505050505050565b60006020828403121561193157600080fd5b8151801515811461143a57600080fd5b634e487b7160e01b600052605160045260246000fdfea26469706673582212205c388c8b96cb872428630693e0c7ee58db38d9375578410f9d1c7833930e276e64736f6c6343000809003352454349455645442041542057415245484f555345000000000000000000000074686520737461746520686173206e6f74206265656e20637265617465642079524541445920464f52204449535041544348000000000000000000000000000053544f434b45442041542057415245484f5553450000000000000000000000004154205452414e5346455220504f494e540000000000000000000000000000005245434945564544204259204255594552000000000000000000000000000000",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "DID()": {
        "details": "Returns a unique DID (Decentralized Identifier) for the supplychainfinance.",
        "returns": {
          "_0": "string representing the DID of the supplychainfinance"
        }
      },
      "edit(string,string)": {
        "params": {
          "Order_Number": "It is the order Identification Number",
          "ipfsFieldContainerHash": "ipfs hash of supplychainfinance metadata"
        }
      },
      "getCurrentState()": {
        "details": "Requires the current state to be configured before calling this function"
      },
      "getHistory(uint256)": {
        "details": "Requires the index to be within the bounds of the history array"
      },
      "getRoles()": {
        "returns": {
          "_0": "bytes32[] array of raw bytes representing the roles"
        }
      },
      "transitionState(bytes32)": {
        "details": "Emits a Transition event after a successful transition."
      }
    },
    "title": "State machine for SupplyChain",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "DID()": {
        "notice": "Returns a DID of the supplychainfinance"
      },
      "edit(string,string)": {
        "notice": "Updates expense properties"
      },
      "getAllStates()": {
        "notice": "Returns a list of all the possible states of this object."
      },
      "getCurrentState()": {
        "notice": "Returns the name of the current state of this object."
      },
      "getHistory(uint256)": {
        "notice": "Returns history as tuple for given index."
      },
      "getHistoryLength()": {
        "notice": "Returns the length of the history"
      },
      "getNextStates()": {
        "notice": "Returns a list of all the possible next states of the current state."
      },
      "getRoles()": {
        "notice": "Returns all the roles for this contract"
      },
      "getState(bytes32)": {
        "notice": "Returns state as tuple for give state."
      },
      "transitionState(bytes32)": {
        "notice": "Transitions the state and executes all callbacks."
      }
    },
    "notice": "SupplyChain",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2324,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "gateKeeper",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(GateKeeper)2056"
      },
      {
        "astId": 3603,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "history",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(StateTransition)3599_storage)dyn_storage"
      },
      {
        "astId": 3608,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "states",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_struct(State)3590_storage)"
      },
      {
        "astId": 3611,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "possibleStates",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 3613,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "currentState",
        "offset": 0,
        "slot": "4",
        "type": "t_bytes32"
      },
      {
        "astId": 3616,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "knownSelectors",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_bytes4)dyn_storage"
      },
      {
        "astId": 3620,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "knownSelector",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_bytes4,t_bool)"
      },
      {
        "astId": 9823,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "_ipfsFieldContainerHash",
        "offset": 0,
        "slot": "7",
        "type": "t_string_storage"
      },
      {
        "astId": 9775,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "_fileKeys",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 9779,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "_knownFileKeys",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 9783,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "_fileFieldsMap",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_bytes32,t_string_storage)"
      },
      {
        "astId": 22426,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "_roles",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 22428,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "_uiFieldDefinitionsHash",
        "offset": 0,
        "slot": "12",
        "type": "t_string_storage"
      },
      {
        "astId": 22430,
        "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
        "label": "_Order_Number",
        "offset": 0,
        "slot": "13",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "base": "t_bytes4",
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32"
      },
      "t_array(t_function_internal_nonpayable(t_bytes32,t_bytes32)returns())dyn_storage": {
        "base": "t_function_internal_nonpayable(t_bytes32,t_bytes32)returns()",
        "encoding": "dynamic_array",
        "label": "function (bytes32,bytes32)[]",
        "numberOfBytes": "32"
      },
      "t_array(t_function_internal_view(t_bytes32,t_bytes32)returns())dyn_storage": {
        "base": "t_function_internal_view(t_bytes32,t_bytes32)returns()",
        "encoding": "dynamic_array",
        "label": "function (bytes32,bytes32) view[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(StateTransition)3599_storage)dyn_storage": {
        "base": "t_struct(StateTransition)3599_storage",
        "encoding": "dynamic_array",
        "label": "struct StateMachine.StateTransition[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(GateKeeper)2056": {
        "encoding": "inplace",
        "label": "contract GateKeeper",
        "numberOfBytes": "20"
      },
      "t_function_internal_nonpayable(t_bytes32,t_bytes32)returns()": {
        "encoding": "inplace",
        "label": "function (bytes32,bytes32)",
        "numberOfBytes": "8"
      },
      "t_function_internal_view(t_bytes32,t_bytes32)returns()": {
        "encoding": "inplace",
        "label": "function (bytes32,bytes32) view",
        "numberOfBytes": "8"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_bytes32,t_struct(State)3590_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct StateMachine.State)",
        "numberOfBytes": "32",
        "value": "t_struct(State)3590_storage"
      },
      "t_mapping(t_bytes4,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(State)3590_storage": {
        "encoding": "inplace",
        "label": "struct StateMachine.State",
        "members": [
          {
            "astId": 3559,
            "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
            "label": "hasBeenCreated",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 3563,
            "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
            "label": "allowedFunctions",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes4,t_bool)"
          },
          {
            "astId": 3566,
            "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
            "label": "allowedRoles",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 3575,
            "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
            "label": "preConditions",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_function_internal_view(t_bytes32,t_bytes32)returns())dyn_storage"
          },
          {
            "astId": 3584,
            "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
            "label": "callbacks",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_function_internal_nonpayable(t_bytes32,t_bytes32)returns())dyn_storage"
          },
          {
            "astId": 3587,
            "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
            "label": "nextStates",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 3589,
            "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
            "label": "preFunction",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes4"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(StateTransition)3599_storage": {
        "encoding": "inplace",
        "label": "struct StateMachine.StateTransition",
        "members": [
          {
            "astId": 3592,
            "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
            "label": "fromState",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 3594,
            "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
            "label": "toState",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 3596,
            "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
            "label": "actor",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 3598,
            "contract": "contracts/supplychain/SupplyChain.sol:SupplyChain",
            "label": "timestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}